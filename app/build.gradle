// android
apply plugin: 'com.android.application'
// kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 32
    buildToolsVersion = '30.0.3'

    defaultConfig {
        applicationId 'de.salomax.ndx'
        minSdkVersion 24
        targetSdkVersion 32
        // SemVer
        def major = 3
        def minor = 3
        def patch = 3
        versionCode = (major * 10000) + (minor * 100) + patch
        versionName = "$major.$minor.$patch"
        archivesBaseName = "$applicationId-v$versionCode"
    }

    signingConfigs {
        release {
            if (getSecret('KEYSTORE_FILE') != null) {
                storeFile file(getSecret('KEYSTORE_FILE'))
                storePassword getSecret('KEYSTORE_PASSWORD')
                keyAlias getSecret('KEYSTORE_KEY_ALIAS')
                keyPassword getSecret('KEYSTORE_KEY_PASSWORD')
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            jniDebuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix ' [DEBUG]'
        }
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning', 'GoogleAppIndexingApiWarning' // app doesn't provide deep-links
        disable 'UnusedResources' //like "text_resultSmall"
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // ViewModel and LiveData
    def lifecycle_version = '2.4.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version" // optional

    // Room
    def room_version = '2.4.1'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // SupportLibs
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.android.material:material:1.5.0'

    // Widgets
    implementation 'com.github.guilhe:circular-progress-view:2.0.0'

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'

    // billing
    implementation 'com.android.billingclient:billing-ktx:3.0.3'

    // test
    testImplementation 'junit:junit:4.13.2'
}

def getSecret(String key) {
    def secretsFile = rootProject.file('secrets.properties')
    if (secretsFile.exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(secretsFile))
        return props[key]
    } else {
        return null
    }
}
