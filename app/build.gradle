// android
apply plugin: 'com.android.application'
// kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// crashlytics
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId 'de.salomax.ndx'
        minSdkVersion 21
        targetSdkVersion 28
        buildToolsVersion '28.0.3'
        // SemVer
        def major = 3
        def minor = 0
        def patch = 0
        versionCode = (major * 10000) + (minor * 100) + patch
        versionName = "$major ($major.$minor.$patch)"
    }

    signingConfigs {
        release {
            storeFile     file(getSecret('KEYSTORE_FILE'))
            storePassword getSecret('KEYSTORE_PASSWORD')
            keyAlias      getSecret('KEYSTORE_KEY_ALIAS')
            keyPassword   getSecret('KEYSTORE_KEY_PASSWORD')
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix ' [DEBUG]'
        }
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning', 'GoogleAppIndexingApiWarning' // app doesn't provide deep-links
        disable 'UnusedResources' //like "text_resultSmall"
    }

    android {
        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // mvp
    def helium_version = '0.2.1'
    implementation "com.joaquimverges.helium:helium-core:$helium_version"
    //implementation "com.joaquimverges.helium:helium-ui:$helium_version"

    // widgets
    implementation 'com.github.guilhe:circular-progress-view:1.3.2'

    // support libs
    def supportLib_version = '28.0.0'
    implementation "com.android.support:appcompat-v7:$supportLib_version"
    implementation "com.android.support:design:$supportLib_version"
    implementation "com.android.support:preference-v7:$supportLib_version"
    implementation "com.android.support:recyclerview-v7:$supportLib_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // room
    def room_version = '1.1.1'
    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    // rxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    // leakCanary
    def leakcanary_version = '1.6.2'
    debugImplementation   "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"

    // crashlytics
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.7'
}

def getSecret(String key) {
    def secretsFile = rootProject.file('secrets.properties')
    if (secretsFile.exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(secretsFile))
        return props[key]
    } else {
        return null
    }
}

// google services - add at end of file!
apply plugin: 'com.google.gms.google-services'
